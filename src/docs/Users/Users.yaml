paths:
  /api/users:
    get:
      tags:
        - Users
      summary: Get all users
      description: Get all users
      operationId: getAllUsers
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    post:
      tags:
        - Users
      summary: Create user
      description: Create user
      operationId: createUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    User:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
    Error:
      type: object
      properties:
        message:
          type: string
models:
  User:
    name: User
    properties:
      name:
        type: string
      email:
        type: string
      password:
        type: string
    required:
      - name
      - email
      - password